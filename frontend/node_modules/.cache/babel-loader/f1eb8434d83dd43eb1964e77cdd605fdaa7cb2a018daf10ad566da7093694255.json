{"ast":null,"code":"import React from'react';import{Box,CircularProgress,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoadingSpinner=_ref=>{let{message='Loading...',size=40}=_ref;return/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",minHeight:\"100vh\",gap:2,children:[/*#__PURE__*/_jsx(CircularProgress,{size:size}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",children:message})]});};export default LoadingSpinner;","map":{"version":3,"names":["React","Box","CircularProgress","Typography","jsx","_jsx","jsxs","_jsxs","LoadingSpinner","_ref","message","size","display","flexDirection","alignItems","justifyContent","minHeight","gap","children","variant","color"],"sources":["/Users/piyush/Projects/ShareLane/frontend/src/components/common/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\nconst LoadingSpinner = ({ message = 'Loading...', size = 40 }) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      minHeight=\"100vh\"\n      gap={2}\n    >\n      <CircularProgress size={size} />\n      <Typography variant=\"body1\" color=\"text.secondary\">\n        {message}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,gBAAgB,CAAEC,UAAU,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,OAAO,CAAG,YAAY,CAAEC,IAAI,CAAG,EAAG,CAAC,CAAAF,IAAA,CAC3D,mBACEF,KAAA,CAACN,GAAG,EACFW,OAAO,CAAC,MAAM,CACdC,aAAa,CAAC,QAAQ,CACtBC,UAAU,CAAC,QAAQ,CACnBC,cAAc,CAAC,QAAQ,CACvBC,SAAS,CAAC,OAAO,CACjBC,GAAG,CAAE,CAAE,CAAAC,QAAA,eAEPb,IAAA,CAACH,gBAAgB,EAACS,IAAI,CAAEA,IAAK,CAAE,CAAC,cAChCN,IAAA,CAACF,UAAU,EAACgB,OAAO,CAAC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAAF,QAAA,CAC/CR,OAAO,CACE,CAAC,EACV,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}