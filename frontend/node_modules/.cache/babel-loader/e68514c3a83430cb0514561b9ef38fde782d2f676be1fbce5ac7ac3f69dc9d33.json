{"ast":null,"code":"import axios from'axios';// Create axios instance\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5001/api',headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle errors\napi.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expired or invalid\nlocalStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// Auth API\nexport const authAPI={login:credentials=>api.post('/auth/login',credentials),register:userData=>api.post('/auth/register',userData),getProfile:()=>api.get('/auth/profile'),updateProfile:profileData=>api.put('/auth/profile',profileData)};// Rides API\nexport const ridesAPI={getRides:params=>api.get('/rides',{params}),getRideById:id=>api.get(\"/rides/\".concat(id)),createRide:rideData=>api.post('/rides',rideData),updateRide:(id,rideData)=>api.put(\"/rides/\".concat(id),rideData),deleteRide:id=>api.delete(\"/rides/\".concat(id)),getMyRides:params=>api.get('/rides/my-rides',{params}),getMyRideHistory:params=>api.get('/rides/my-rides/history',{params})};// Bookings API\nexport const bookingsAPI={createBooking:bookingData=>api.post('/bookings',bookingData),getMyBookings:params=>api.get('/bookings',{params}),getRideBookings:(rideId,params)=>api.get(\"/bookings/ride/\".concat(rideId),{params}),updateBookingStatus:(id,status)=>api.put(\"/bookings/\".concat(id,\"/status\"),{status}),cancelBooking:(id,reason)=>api.put(\"/bookings/\".concat(id,\"/cancel\"),{cancellationReason:reason})};// Payments API\nexport const paymentsAPI={createPaymentIntent:bookingId=>api.post('/payments/create-intent',{bookingId}),confirmPayment:paymentIntentId=>api.post('/payments/confirm',{paymentIntentId}),processRefund:(bookingId,reason)=>api.post('/payments/refund',{bookingId,reason}),getPaymentHistory:params=>api.get('/payments/history',{params})};// Reviews API\nexport const reviewsAPI={createReview:reviewData=>api.post('/reviews',reviewData),getUserReviews:(userId,params)=>api.get(\"/reviews/user/\".concat(userId),{params}),getRideReviews:(rideId,params)=>api.get(\"/reviews/ride/\".concat(rideId),{params}),getGivenReviews:params=>api.get('/reviews/given',{params})};// Notifications API\nexport const notificationsAPI={getNotifications:params=>api.get('/notifications',{params}),getNotificationCount:()=>api.get('/notifications/count'),markAsRead:id=>api.put(\"/notifications/\".concat(id,\"/read\")),markAllAsRead:()=>api.post('/notifications/mark-all-read'),deleteNotification:id=>api.delete(\"/notifications/\".concat(id))};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getProfile","get","updateProfile","profileData","put","ridesAPI","getRides","params","getRideById","id","createRide","rideData","updateRide","deleteRide","delete","getMyRides","getMyRideHistory","bookingsAPI","createBooking","bookingData","getMyBookings","getRideBookings","rideId","updateBookingStatus","cancelBooking","reason","cancellationReason","paymentsAPI","createPaymentIntent","bookingId","confirmPayment","paymentIntentId","processRefund","getPaymentHistory","reviewsAPI","createReview","reviewData","getUserReviews","userId","getRideReviews","getGivenReviews","notificationsAPI","getNotifications","getNotificationCount","markAsRead","markAllAsRead","deleteNotification"],"sources":["/Users/piyush/Projects/ShareLane/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5001/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (profileData) => api.put('/auth/profile', profileData),\n};\n\n// Rides API\nexport const ridesAPI = {\n  getRides: (params) => api.get('/rides', { params }),\n  getRideById: (id) => api.get(`/rides/${id}`),\n  createRide: (rideData) => api.post('/rides', rideData),\n  updateRide: (id, rideData) => api.put(`/rides/${id}`, rideData),\n  deleteRide: (id) => api.delete(`/rides/${id}`),\n  getMyRides: (params) => api.get('/rides/my-rides', { params }),\n  getMyRideHistory: (params) => api.get('/rides/my-rides/history', { params }),\n};\n\n// Bookings API\nexport const bookingsAPI = {\n  createBooking: (bookingData) => api.post('/bookings', bookingData),\n  getMyBookings: (params) => api.get('/bookings', { params }),\n  getRideBookings: (rideId, params) => api.get(`/bookings/ride/${rideId}`, { params }),\n  updateBookingStatus: (id, status) => api.put(`/bookings/${id}/status`, { status }),\n  cancelBooking: (id, reason) => api.put(`/bookings/${id}/cancel`, { cancellationReason: reason }),\n};\n\n// Payments API\nexport const paymentsAPI = {\n  createPaymentIntent: (bookingId) => api.post('/payments/create-intent', { bookingId }),\n  confirmPayment: (paymentIntentId) => api.post('/payments/confirm', { paymentIntentId }),\n  processRefund: (bookingId, reason) => api.post('/payments/refund', { bookingId, reason }),\n  getPaymentHistory: (params) => api.get('/payments/history', { params }),\n};\n\n// Reviews API\nexport const reviewsAPI = {\n  createReview: (reviewData) => api.post('/reviews', reviewData),\n  getUserReviews: (userId, params) => api.get(`/reviews/user/${userId}`, { params }),\n  getRideReviews: (rideId, params) => api.get(`/reviews/ride/${rideId}`, { params }),\n  getGivenReviews: (params) => api.get('/reviews/given', { params }),\n};\n\n// Notifications API\nexport const notificationsAPI = {\n  getNotifications: (params) => api.get('/notifications', { params }),\n  getNotificationCount: () => api.get('/notifications/count'),\n  markAsRead: (id) => api.put(`/notifications/${id}/read`),\n  markAllAsRead: () => api.post('/notifications/mark-all-read'),\n  deleteNotification: (id) => api.delete(`/notifications/${id}`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}