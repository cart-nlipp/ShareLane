{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{io}from'socket.io-client';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const SocketContext=/*#__PURE__*/createContext();export const SocketProvider=_ref=>{let{children}=_ref;const[socket,setSocket]=useState(null);const[isConnected,setIsConnected]=useState(false);const{user,isAuthenticated}=useAuth();useEffect(()=>{if(isAuthenticated&&user){// Only create socket if one doesn't exist\nif(!socket){// Initialize socket connection\nconst newSocket=io(process.env.REACT_APP_API_URL||'http://localhost:5001',{auth:{token:localStorage.getItem('token')}});// Connection event handlers\nnewSocket.on('connect',()=>{console.log('Socket connected:',newSocket.id);setIsConnected(true);// Join user to their personal room\nnewSocket.emit('join',user.id);});newSocket.on('disconnect',()=>{console.log('Socket disconnected');setIsConnected(false);});newSocket.on('connect_error',error=>{console.error('Socket connection error:',error);setIsConnected(false);});setSocket(newSocket);}}else{// Disconnect socket if user is not authenticated\nif(socket){socket.close();setSocket(null);setIsConnected(false);}}},[isAuthenticated,user===null||user===void 0?void 0:user.id]);// Only depend on user.id, not the entire user object\n// Cleanup effect\nuseEffect(()=>{return()=>{if(socket){socket.close();}};},[]);// Socket event handlers\nconst onBookingCreated=callback=>{if(socket){socket.on('booking_created',callback);}};const onBookingConfirmed=callback=>{if(socket){socket.on('booking_confirmed',callback);}};const onBookingCancelled=callback=>{if(socket){socket.on('booking_cancelled',callback);}};const onPaymentSuccess=callback=>{if(socket){socket.on('payment_success',callback);}};const onPaymentReceived=callback=>{if(socket){socket.on('payment_received',callback);}};const onRideUpdated=callback=>{if(socket){socket.on('ride_updated',callback);}};const onReviewCreated=callback=>{if(socket){socket.on('review_created',callback);}};// Emit functions\nconst emitBookingCreated=data=>{if(socket){socket.emit('booking_created',data);}};const emitBookingConfirmed=data=>{if(socket){socket.emit('booking_confirmed',data);}};const emitBookingCancelled=data=>{if(socket){socket.emit('booking_cancelled',data);}};const emitPaymentSuccess=data=>{if(socket){socket.emit('payment_success',data);}};const emitRideUpdated=data=>{if(socket){socket.emit('ride_updated',data);}};const emitReviewCreated=data=>{if(socket){socket.emit('review_created',data);}};// Remove event listeners\nconst removeAllListeners=()=>{if(socket){socket.removeAllListeners();}};const value={socket,isConnected,onBookingCreated,onBookingConfirmed,onBookingCancelled,onPaymentSuccess,onPaymentReceived,onRideUpdated,onReviewCreated,emitBookingCreated,emitBookingConfirmed,emitBookingCancelled,emitPaymentSuccess,emitRideUpdated,emitReviewCreated,removeAllListeners};return/*#__PURE__*/_jsx(SocketContext.Provider,{value:value,children:children});};export const useSocket=()=>{const context=useContext(SocketContext);if(!context){throw new Error('useSocket must be used within a SocketProvider');}return context;};export default SocketContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsx","_jsx","SocketContext","SocketProvider","_ref","children","socket","setSocket","isConnected","setIsConnected","user","isAuthenticated","newSocket","process","env","REACT_APP_API_URL","auth","token","localStorage","getItem","on","console","log","id","emit","error","close","onBookingCreated","callback","onBookingConfirmed","onBookingCancelled","onPaymentSuccess","onPaymentReceived","onRideUpdated","onReviewCreated","emitBookingCreated","data","emitBookingConfirmed","emitBookingCancelled","emitPaymentSuccess","emitRideUpdated","emitReviewCreated","removeAllListeners","value","Provider","useSocket","context","Error"],"sources":["/Users/piyush/Projects/ShareLane/frontend/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const { user, isAuthenticated } = useAuth();\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      // Only create socket if one doesn't exist\n      if (!socket) {\n        // Initialize socket connection\n        const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5001', {\n          auth: {\n            token: localStorage.getItem('token')\n          }\n        });\n\n        // Connection event handlers\n        newSocket.on('connect', () => {\n          console.log('Socket connected:', newSocket.id);\n          setIsConnected(true);\n          \n          // Join user to their personal room\n          newSocket.emit('join', user.id);\n        });\n\n        newSocket.on('disconnect', () => {\n          console.log('Socket disconnected');\n          setIsConnected(false);\n        });\n\n        newSocket.on('connect_error', (error) => {\n          console.error('Socket connection error:', error);\n          setIsConnected(false);\n        });\n\n        setSocket(newSocket);\n      }\n    } else {\n      // Disconnect socket if user is not authenticated\n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setIsConnected(false);\n      }\n    }\n  }, [isAuthenticated, user?.id]); // Only depend on user.id, not the entire user object\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.close();\n      }\n    };\n  }, []);\n\n  // Socket event handlers\n  const onBookingCreated = (callback) => {\n    if (socket) {\n      socket.on('booking_created', callback);\n    }\n  };\n\n  const onBookingConfirmed = (callback) => {\n    if (socket) {\n      socket.on('booking_confirmed', callback);\n    }\n  };\n\n  const onBookingCancelled = (callback) => {\n    if (socket) {\n      socket.on('booking_cancelled', callback);\n    }\n  };\n\n  const onPaymentSuccess = (callback) => {\n    if (socket) {\n      socket.on('payment_success', callback);\n    }\n  };\n\n  const onPaymentReceived = (callback) => {\n    if (socket) {\n      socket.on('payment_received', callback);\n    }\n  };\n\n  const onRideUpdated = (callback) => {\n    if (socket) {\n      socket.on('ride_updated', callback);\n    }\n  };\n\n  const onReviewCreated = (callback) => {\n    if (socket) {\n      socket.on('review_created', callback);\n    }\n  };\n\n  // Emit functions\n  const emitBookingCreated = (data) => {\n    if (socket) {\n      socket.emit('booking_created', data);\n    }\n  };\n\n  const emitBookingConfirmed = (data) => {\n    if (socket) {\n      socket.emit('booking_confirmed', data);\n    }\n  };\n\n  const emitBookingCancelled = (data) => {\n    if (socket) {\n      socket.emit('booking_cancelled', data);\n    }\n  };\n\n  const emitPaymentSuccess = (data) => {\n    if (socket) {\n      socket.emit('payment_success', data);\n    }\n  };\n\n  const emitRideUpdated = (data) => {\n    if (socket) {\n      socket.emit('ride_updated', data);\n    }\n  };\n\n  const emitReviewCreated = (data) => {\n    if (socket) {\n      socket.emit('review_created', data);\n    }\n  };\n\n  // Remove event listeners\n  const removeAllListeners = () => {\n    if (socket) {\n      socket.removeAllListeners();\n    }\n  };\n\n  const value = {\n    socket,\n    isConnected,\n    onBookingCreated,\n    onBookingConfirmed,\n    onBookingCancelled,\n    onPaymentSuccess,\n    onPaymentReceived,\n    onRideUpdated,\n    onReviewCreated,\n    emitBookingCreated,\n    emitBookingConfirmed,\n    emitBookingCancelled,\n    emitPaymentSuccess,\n    emitRideUpdated,\n    emitReviewCreated,\n    removeAllListeners\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport default SocketContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}